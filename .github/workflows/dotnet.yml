# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Publish
      run: dotnet publish -c Release -o ./publish

    - name: Zip published app
      run: |
        powershell Compress-Archive -Path ./publish/* -DestinationPath ./my_app.zip

    - name: Get latest tag
      id: get_latest_tag
      run: |
          git fetch --tags
          $latestTag = git tag --list --sort=-v:refname | Select-Object -First 1
          if (-not $latestTag) {
            $latestTag = "none"
          }
          echo "::set-output name=LATEST_TAG::$latestTag"
  
    - name: Increment tag
      id: increment_tag
      run: |
          $latestTag = "${{ steps.get_latest_tag.outputs.LATEST_TAG }}"
          echo "Latest tag: $latestTag"
          if ($latestTag -eq "none") {
            $newTag = "v1.0.0"
          } else {
            $tagParts = $latestTag.TrimStart('v').Split('.')
            $major = [int]$tagParts[0]
            $minor = [int]$tagParts[1]
            $patch = [int]$tagParts[2]
            $patch++
            $newTag = "v$major.$minor.$patch"
          }
          echo "New tag: $newTag"
          echo "::set-output name=NEW_TAG::$newTag"
  
    - name: Create and push new tag
      run: |
          $newTag = "${{ steps.increment_tag.outputs.NEW_TAG }}"
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag $newTag
          git push origin $newTag

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.increment_tag.outputs.NEW_TAG }}
        release_name: Release ${{ steps.increment_tag.outputs.NEW_TAG }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish
        asset_name: my_app.zip
        asset_content_type: application/zip